// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  icon      String?
  order     Int       @default(0)
  isActive  Boolean   @default(true)
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float
  image       String?
  order       Int       @default(0)
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  categoryId  Int
  category    Category  @relation(fields: [categoryId], references: [id])
  interactions ProductInteraction[] // Add relation to interactions
}

model Settings {
  id          Int      @id @default(autoincrement())
  general     Json?
  contact     Json?
  social      Json?
  appearance  Json?
  menu        Json?
  qrCode      Json?
  notifications Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Table {
  id        Int       @id @default(autoincrement())
  name      String
  order     Int       @default(0)
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

// New model for product likes/dislikes
model ProductInteraction {
  id              Int      @id @default(autoincrement())
  productId       Int
  product         Product  @relation(fields: [productId], references: [id])
  interactionType String   // "LIKE" or "DISLIKE"
  createdAt       DateTime @default(now())

  @@index([productId])
}
